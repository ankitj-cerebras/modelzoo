# A 6.7B parameter Cerebras-GPT model configuration designed for a single CS-2
# for dense fine-tuning (1 epoch).

# This config replicates the results in: https://www.cerebras.net/blog/accelerating-llm-training-with-variable-sparse-pre-training-and-dense-fine-tuning/

### Training Data
train_input:
    data_processor: "GptHDF5MapDataProcessor"
    data_dir: "./language/datasets/dart_data/train_msl512"
    shuffle: True
    shuffle_seed: 0
    # The effective batch size, which is evenly divided across "num_csx" systems used for the run
    batch_size: 32 # 32 global = (32 micro)*(1 csx)*(1 grad accum step)
    num_workers: 1
    prefetch_factor: 10
    persistent_workers: True

### Validation Data
eval_input:
    data_processor: "GptHDF5MapDataProcessor"
    data_dir: "./language/datasets/dart_data/valid_msl512"
    # The effective batch size, which is evenly divided across "num_csx" systems used for the run
    batch_size: 32
    shuffle: False
    num_workers: 1
    prefetch_factor: 10
    persistent_workers: True

### Model
model:
    # Embedding
    hidden_size: 4096
    use_position_embedding: True
    position_embedding_type: "learned"
    share_embedding_weights: True
    max_position_embeddings: 2048
    vocab_size: 50257

    # Decoder
    num_hidden_layers: 32
    dropout_rate: 0.0
    layer_norm_epsilon: 1.0e-5

    # Decoder - Attention
    num_heads: 32
    attention_type: "scaled_dot_product"
    attention_dropout_rate: 0.0
    use_projection_bias_in_attention: True
    use_ffn_bias_in_attention: True

    # Decoder - ffn
    filter_size: 16384
    nonlinearity: "gelu"
    use_ffn_bias: True

    # Initializers
    embedding_initializer:
        mean: 0.0
        name: truncated_normal
        std: 0.02
        a: -0.04
        b: 0.04

    initializer:
        mean: 0.0
        name: truncated_normal
        std: 0.02
        a: -0.04
        b: 0.04

    output_layer_initializer:
        mean: 0.0
        name: truncated_normal
        std: 0.0025
        a: -0.005
        b: 0.005

    # Task-specific
    loss_scaling: "batch_size" # needed for gradient accumulation
    loss_weight: 0.00048828125 # = 1/max_sequence_length
    use_bias_in_output: False

    # Cerebras parameters
    mixed_precision: True
    use_bfloat16: True

### Optimization
optimizer:
    optimizer_type: "AdamW"
    betas: [0.9, 0.999]
    eps: 1.0e-8
    max_gradient_norm: 1.0
    learning_rate:
      - scheduler: "Linear"
        initial_learning_rate: 0.0
        end_learning_rate: 1.6e-06
        total_iters: 194
      - scheduler: "CosineDecay"
        initial_learning_rate: 1.6e-06
        end_learning_rate: 0.0
        total_iters: 1744
    weight_decay: 0.01
    correct_bias: True
    log_summaries: True

### Cerebras parameters
runconfig:
    max_steps: 1938
    eval_steps: 2854
    checkpoint_steps: 500
    enable_distributed: False
    log_steps: 10
    save_initial_checkpoint: False
    use_cs_grad_accum: True
    use_appliance_data: True
    precision_opt_level: 1
