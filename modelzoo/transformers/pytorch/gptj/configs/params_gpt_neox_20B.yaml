################################################
## Base configuration: GPT-NeoX 20B params
## reference: https://github.com/EleutherAI/gpt-neox/blob/main/configs/20B.yml
################################################
train_input:
    data_processor: "GptHDF5DataProcessor"
    data_dir:
        - "./language/datasets/pile_original/hdf5_dataset/train_neox_msl2048/0/"
        - "./language/datasets/pile_original/hdf5_dataset/train_neox_msl2048/1/"
        - "./language/datasets/pile_original/hdf5_dataset/train_neox_msl2048/2/"
        - "./language/datasets/pile_original/hdf5_dataset/train_neox_msl2048/3/"
        - "./language/datasets/pile_original/hdf5_dataset/train_neox_msl2048/4/"
        - "./language/datasets/pile_original/hdf5_dataset/train_neox_msl2048/5/"
        - "./language/datasets/pile_original/hdf5_dataset/train_neox_msl2048/6/"
        - "./language/datasets/pile_original/hdf5_dataset/train_neox_msl2048/7/"
        - "./language/datasets/pile_original/hdf5_dataset/train_neox_msl2048/8/"
        - "./language/datasets/pile_original/hdf5_dataset/train_neox_msl2048/9/"
    # The effective batch size, which is evenly divided across "num_csx" systems used for the run
    batch_size: 77
    shuffle: True
    shuffle_seed: 1337
    num_workers: 8
    prefetch_factor: 10
    persistent_workers: True # Important to avoid seeding at each epoch

eval_input:
    data_processor: "GptHDF5DataProcessor"
    data_dir: "./language/datasets/pile_original/hdf5_dataset/val_neox_msl2048/"
    # The effective batch size, which is evenly divided across "num_csx" systems used for the run
    batch_size: 77
    shuffle: False
    num_workers: 8
    prefetch_factor: 10
    persistent_workers: True # Important to avoid seeding at each epoch

model:
    # Embedding
    vocab_size: 50277
    position_embedding_type: "rotary"
    share_embedding_weights: False
    embedding_dropout_rate: 0.0

    # Decoder Block
    hidden_size: 6144
    num_heads: 64
    num_hidden_layers: 44
    max_position_embeddings: 2048
    attention_type: "scaled_dot_product"
    attention_dropout_rate: 0.0
    residual_dropout_rate: 0.0

    use_untied_layer_norm: True
    use_projection_bias_in_attention: True
    use_ffn_bias_in_attention: True
    use_ffn_bias: True

    filter_size: 24576 # 4 * hidden_size
    nonlinearity: "gelu"

    rotary_dim: 24 # hidden_size / num_heads * 25%
    layer_norm_epsilon: 1.0e-5
    use_bias_in_output: False
    initializer_range: 0.02

    loss_scaling: "batch_size"
    loss_weight: 0.00048828125 # = 1/max_sequence_length

    # We use truncated_normal instead of normal (ref: https://github.com/EleutherAI/gpt-neox),
    # with the same std and mean for better performance.
    embedding_initializer:
        name: "truncated_normal"
        mean: 0.0
        std: 0.00806871489 # sqrt(2 / (5 * hidden_size))
        a: -0.01613743
        b: 0.01613743

    initializer:
        name: "truncated_normal"
        mean: 0.0
        std: 0.00806871489 # sqrt(2 / (5 * hidden_size))
        a: -0.01613743
        b: 0.01613743

    output_layer_initializer:
        name: "truncated_normal"
        mean: 0.0
        std: 0.00057989813 # 2 / num_hidden_layers / sqrt(hidden_size)
        a: -0.001159796
        b: 0.001159796

    mixed_precision: True

optimizer:
    optimizer_type: "adamw"
    betas: [0.9, 0.95]
    eps: 1.0e-8
    weight_decay: 0.01
    max_gradient_norm: 1.0
    correct_bias: True
    # we want to keep the same number of tokens consistent with Eleuther gpt-neox 20B
    # Eleuther gpt-neox: steps * batch_size (1538) * seq_len (2048)
    learning_rate:
        - total_iters: 29961 # warm-up 0.01, 1500 * 1538 / 77
          scheduler: "Linear"
          initial_learning_rate: 0.0
          end_learning_rate: 2.17e-5 # sqrt(77 / 1538) * 0.97e-4
        - scheduler: "CosineDecay"
          initial_learning_rate: 2.17e-5
          total_iters: 1966142 # 148500 * 1538 / 77
          end_learning_rate: 2.17e-6 # end_learning_rate = initial_learning_rate * alpha. alpha = 1.0 - beta1, # sqrt(77 / 1538) * 0.97e-5

runconfig:
    max_steps: 2996103 # 150000 * 1538 / 77
    log_steps: 100
    checkpoint_steps: 10000
    use_cs_grad_accum: True
    seed: 1
