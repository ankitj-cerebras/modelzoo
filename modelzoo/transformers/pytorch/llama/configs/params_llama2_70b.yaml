# LLaMa v2 model, 70B parameters, max_seq_length 4096
# Based on: https://arxiv.org/pdf/2307.09288.pdf

train_input:
    data_processor: "GptHDF5DataProcessor"
    data_dir: "./llama_v2_data_test/val"
    shuffle: False
    shuffle_seed: 1
    batch_size: 55
    num_workers: 8
    prefetch_factor: 10
    persistent_workers: True


eval_input:
    data_processor: "GptHDF5DataProcessor"
    data_dir: "./llama_v2_data_test/test"
    shuffle: False
    shuffle_seed: 1
    batch_size: 55
    num_workers: 8
    prefetch_factor: 10
    persistent_workers: True

model:
    # Embedding
    vocab_size: 32000
    hidden_size: 8192
    use_position_embedding: True
    position_embedding_type: "rotary"
    rotary_dim: 128
    share_embedding_weights: False
    max_position_embeddings: 4096
    embedding_dropout_rate: 0.0

    # Decoder
    num_hidden_layers: 80
    dropout_rate: 0.0
    layer_norm_epsilon: 1.0e-5
    norm_type: "rmsnorm"

    # Decoder - Attention
    num_heads: 64
    attention_type: "scaled_dot_product"
    attention_module: "multiquery_attention"
    attention_dropout_rate: 0.0
    use_projection_bias_in_attention: False
    use_ffn_bias_in_attention: False
    extra_attention_params:
        num_kv_groups: 8

    # Decoder - ffn
    filter_size: 28672
    nonlinearity: "swiglu"
    use_ffn_bias: False

    # Task-specific
    use_bias_in_output: False

    # Cerebras parameters
    mixed_precision: True
    use_bfloat16: True

optimizer:
    optimizer_type: "AdamW"
    betas: [0.9, 0.95]
    eps: 1.0e-5
    correct_bias: True
    weight_decay: 0.1
    learning_rate:
        - scheduler: "Linear"
          initial_learning_rate: 0.0
          end_learning_rate: 3.47e-05 # sqrt(batch_size / 1024) * 1.5e-4
          total_iters: 37236
        - scheduler: "CosineDecay"
          initial_learning_rate: 3.47e-05 # sqrt(batch_size / 1024) * 1.5e-4
          end_learning_rate: 3.47e-06 # sqrt(batch_size / 1024) * 1.5e-5
          total_iters: 8840601
    max_gradient_norm: 1.0

runconfig:
    max_steps: 8877837       # Llama v2 70B was trained on 2T tokens.
                             # steps = 2T / (batch_size * 4096)
    log_steps: 1
    checkpoint_steps: 10000
    save_initial_checkpoint: True
    seed: 1
    model_dir: "./model_dir"
    eval_steps: 1674
    use_cs_grad_accum: True
